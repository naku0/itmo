-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД = 152862.
-- b) Н_СЕССИЯ.ИД > 27640.
-- c) Н_СЕССИЯ.ИД < 1975.
-- Вид соединения: LEFT JOIN.
 EXPLAIN ANALYZE
SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ИД
FROM Н_ЛЮДИ
LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ИД = 152862
    AND Н_СЕССИЯ.ИД > 27640
    AND Н_СЕССИЯ.ИД < 1975;

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ОТЧЕСТВО > Владимирович.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163276.
-- Вид соединения: LEFT JOIN.
 EXPLAIN ANALYZE
SELECT Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА
FROM Н_ЛЮДИ
LEFT JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Владимирович'
    AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163276;


-- Запрос 1
Nested Loop  (cost=4.58..19.63 rows=1 width=24) (actual time=0.047..0.048 rows=0 loops=1)
   ->  Index Scan using "ЧЛВК_PK" on "Н_ЛЮДИ"  (cost=0.28..8.30 rows=1 width=24) (actual time=0.035..0.036 rows=1 loops=1)
         Index Cond: ("ИД" = 152862)
   ->  Bitmap Heap Scan on "Н_СЕССИЯ"  (cost=4.30..11.32 rows=1 width=8) (actual time=0.007..0.007 rows=0 loops=1)
         Recheck Cond: ("ЧЛВК_ИД" = 152862)
         Filter: (("ИД" > 27640) AND ("ИД" < 1975))
         ->  Bitmap Index Scan on "SYS_C003500_IFK"  (cost=0.00..4.29 rows=2 width=0) (actual time=0.005..0.005 rows=0 loops=1)
               Index Cond: ("ЧЛВК_ИД" = 152862)
 Planning Time: 0.908 ms
 Execution Time: 0.135 ms

-- Запрос 2
 Nested Loop Left Join  (cost=4.89..39.62 rows=5 width=14) (actual time=0.083..0.086 rows=1 loops=1)
   Join Filter: ("Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД")
   ->  Nested Loop  (cost=0.56..16.61 rows=1 width=10) (actual time=0.059..0.061 rows=1 loops=1)
         ->  Index Scan using "ЧЛВК_PK" on "Н_ЛЮДИ"  (cost=0.28..8.30 rows=1 width=4) (actual time=0.045..0.046 rows=1 loops=1)
               Index Cond: ("ИД" = 163276)
               Filter: (("ОТЧЕСТВО")::text > 'Владимирович'::text)
         ->  Index Scan using "ОБУЧ_ЧЛВК_FK_I" on "Н_ОБУЧЕНИЯ"  (cost=0.28..8.30 rows=1 width=10) (actual time=0.011..0.012 rows=1 loops=1)
               Index Cond: ("ЧЛВК_ИД" = 163276)
   ->  Bitmap Heap Scan on "Н_УЧЕНИКИ"  (cost=4.33..22.95 rows=5 width=8) (actual time=0.019..0.020 rows=1 loops=1)
         Recheck Cond: ("ЧЛВК_ИД" = 163276)
         Heap Blocks: exact=1
         ->  Bitmap Index Scan on "УЧЕН_ОБУЧ_FK_I"  (cost=0.00..4.32 rows=5 width=0) (actual time=0.016..0.016 rows=1 loops=1)
               Index Cond: ("ЧЛВК_ИД" = 163276)
 Planning Time: 1.589 ms
 Execution Time: 0.174 ms
 


--  avg(CASE WHEN (ОЦЕНКА <> 'зачет' AND ОЦЕНКА <> 'осв' AND ОЦЕНКА <> 'незач' AND ОЦЕНКА <> 'неявка') THEN CAST(ОЦЕНКА AS INTEGER) END) AS СР_ОЦЕНКА 
-- Вывести список студентов(фамилия, имя, возраст, средний бал)
-- (отсортировать в обратном порядке по Фамилии,Имени) КТУ старше 25, 
-- но младше 40 со средним баллом выше 3.5 сдавших сессию в аудиториях на 3 или 4 этажах(по первой цифре аудитории)

 SELECT ФАМИЛИЯ, ИМЯ, extract(year FROM age(ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ, 
            avg(CASE WHEN (ОЦЕНКА <> 'зачет' AND ОЦЕНКА <> 'осв' AND ОЦЕНКА <> 'незач' AND ОЦЕНКА <> 'неявка') THEN CAST(ОЦЕНКА AS INTEGER) END) AS СР_ОЦЕНКА FROM Н_ЛЮДИ
      JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
      JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
      JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
      JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
      JOIN Н_СЕССИЯ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_СЕССИЯ.ЧЛВК_ИД
 WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
      AND ВОЗРАСТ > 25 AND ВОЗРАСТ < 40
      AND Н_СЕССИЯ.АУДИТОРИЯ_К >= '3' AND Н_СЕССИЯ.АУДИТОРИЯ_К < '5'
GROUP BY ФАМИЛИЯ, ИМЯ, ДАТА_РОЖДЕНИЯ
HAVING СР_ОЦЕНКА > 3.5
ORDER BY ФАМИЛИЯ, ИМЯ DESC;


SELECT ФАМИЛИЯ, ИМЯ, ВОЗРАСТ, СР_ОЦЕНКА
FROM (
    SELECT 
        Н_ЛЮДИ.ФАМИЛИЯ, 
        Н_ЛЮДИ.ИМЯ, 
        extract(year FROM age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ, 
        avg(CASE 
                WHEN (ОЦЕНКА <> 'зачет' 
                      AND ОЦЕНКА <> 'осв' 
                      AND ОЦЕНКА <> 'незач' 
                      AND ОЦЕНКА <> 'неявка'
                      AND ОЦЕНКА <> '99') 
                THEN CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER) 
            END
        ) AS СР_ОЦЕНКА 
    FROM 
        Н_ЛЮДИ
        JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
        JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
        JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
        JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
        JOIN Н_СЕССИЯ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_СЕССИЯ.ЧЛВК_ИД
    WHERE 
        Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
        AND Н_СЕССИЯ.АУДИТОРИЯ_К >= '3' 
        AND Н_СЕССИЯ.АУДИТОРИЯ_К < '5'
    GROUP BY 
        Н_ЛЮДИ.ФАМИЛИЯ, 
        Н_ЛЮДИ.ИМЯ, 
        Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ
) as temp
WHERE 
    ВОЗРАСТ > 25 
    AND ВОЗРАСТ < 40
    AND СР_ОЦЕНКА > 3.5
ORDER BY 
    ФАМИЛИЯ, 
    ИМЯ DESC;
