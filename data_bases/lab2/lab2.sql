-- 1.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД = 152862.
-- b) Н_СЕССИЯ.ИД > 27640.
-- c) Н_СЕССИЯ.ИД < 1975.
-- Вид соединения: LEFT JOIN.

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ИД 
FROM Н_ЛЮДИ LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ИД = 152862 AND Н_СЕССИЯ.ИД > 27640 AND Н_СЕССИЯ.ИД < 1975;

----

-- 2.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ОТЧЕСТВО > Владимирович.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163276.
-- Вид соединения: LEFT JOIN.

SELECT Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА
FROM Н_ЛЮДИ
LEFT JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Владимирович' AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163276;

----

-- 3.
-- Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто младше 20 лет.

SELECT EXISTS (
    SELECT Н_ЛЮДИ.ФАМИЛИЯ, AGE(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ), Н_УЧЕНИКИ.ГРУППА
    FROM Н_УЧЕНИКИ
    INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND extract(year from age(ДАТА_РОЖДЕНИЯ)) < 20);

----

-- 4.
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) ровно 2 групп ФКТИУ.
-- Для реализации использовать соединение таблиц.

SELECT ПЛАН_ИД
FROM
    (SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS ПЛАН_ИД, count(Н_ГРУППЫ_ПЛАНОВ.ГРУППА) AS КОЛИЧЕСТВО
    FROM Н_ГРУППЫ_ПЛАНОВ
        JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
        JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
    WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
    GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
    ) AS ПЛАНЫ_ГРУПП_КТиУ
WHERE КОЛИЧЕСТВО = 2;

----

-- 5. 
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), 
-- у которых средняя оценка не больше средней оценк(е|и) в группе 3100.

WITH СР_ОЦЕНКА_СТУДЕНТА AS (
    SELECT 
        Н_УЧЕНИКИ.ЧЛВК_ИД AS СТУДЕНТ_ИД,
        Н_УЧЕНИКИ.ГРУППА AS ГРУППА, 
        Н_ЛЮДИ.ФАМИЛИЯ AS ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ AS ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО AS ОТЧЕСТВО,
        avg(CASE WHEN (ОЦЕНКА <> 'зачет' AND ОЦЕНКА <> 'осв' AND ОЦЕНКА <> 'незач' AND ОЦЕНКА <> 'неявка') THEN CAST(ОЦЕНКА AS INTEGER) END) AS СР_ОЦЕНКА 
FROM Н_УЧЕНИКИ 
    JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
GROUP BY СТУДЕНТ_ИД, ГРУППА, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО)

SELECT СТУДЕНТ_ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, СР_ОЦЕНКА
FROM СР_ОЦЕНКА_СТУДЕНТА
WHERE ГРУППА = '4100' AND 
    СР_ОЦЕНКА <= (SELECT avg(СР_ОЦЕНКА) FROM СР_ОЦЕНКА_СТУДЕНТА WHERE ГРУППА = '3100');

----

-- 6. 
-- Получить список студентов, зачисленных ровно первого сентября 2012 года на первый курс заочной формы обучения. 
-- В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать соединение таблиц.

SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ЧЛВК_ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
FROM Н_ЛЮДИ
    JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
    JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE
    Н_УЧЕНИКИ.НАЧАЛО = DATE '2012-09-01' AND
    Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная' AND
    Н_ПЛАНЫ.КУРС = 1;

----

-- 7. 
-- Вывести список студентов, имеющих одинаковые отчества, но не совпадающие ид.
SELECT DISTINCT ЛЮДИ1.ОТЧЕСТВО, ЛЮДИ1.ИД, ЛЮДИ1.ИМЯ, ЛЮДИ1.ФАМИЛИЯ, ЛЮДИ2.ИД, ЛЮДИ2.ИМЯ, ЛЮДИ2.ФАМИЛИЯ
FROM Н_ЛЮДИ AS ЛЮДИ1 
JOIN Н_ЛЮДИ AS ЛЮДИ2 ON (ЛЮДИ1.ОТЧЕСТВО = ЛЮДИ2.ОТЧЕСТВО)
WHERE ЛЮДИ1.ИД <> ЛЮДИ2.ИД AND ЛЮДИ1.ОТЧЕСТВО <> '.';


SELECT ОТЧЕСТВО, count(ИД)
FROM Н_ЛЮДИ
WHERE ОТЧЕСТВО <> '.'
GROUP BY ОТЧЕСТВО
HAVING count(ИД) > 1
ORDER BY ОТЧЕСТВО;
